{"remainingRequest":"/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/src/pages/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/src/pages/Register.vue","mtime":1621176518883},{"path":"/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHttYXBBY3Rpb25zfSBmcm9tICd2dWV4JwppbXBvcnQge21hcFN0YXRlfSBmcm9tICd2dWV4JwppbXBvcnQgVnVlQm9vdHN0cmFwVHlwZWFoZWFkIGZyb20gJ3Z1ZS1ib290c3RyYXAtdHlwZWFoZWFkJwpleHBvcnQgZGVmYXVsdCB7Y29tcG9uZW50czogewogICAgICAgIFZ1ZUJvb3RzdHJhcFR5cGVhaGVhZAogICAgICAgIAogICAgfSwKCiAgICAKCiAgICBkYXRhKCkgewoKICAgICAgICByZXR1cm4gewoKICAgICAgICBjb2RlOiAnJywKICAgICAgICBwb3N0Y29kZTonJywKICAgICAgICByZWdpb246JycsCiAgICAgICAgY291bnRyeTonJywKICAgICAgICBjb3VudHJpZXM6W10sCiAgICAgICAgc2FtcGxlOiBbXSwKICAgICAgICBjb3VudHJ5RGF0YTpbXSwKICAgICAgICByZWdpb25EYXRhOltdLAogICAgICAgIGFkcmVzc19saW5lOicnLAogICAgICAgIGZpcnN0bmFtZTonJywKICAgICAgICBsYXN0bmFtZTonJywKCiAgICAgICAgZm9ybTp7CiAgICAgICAgICB1c2VybmFtZTpudWxsLAogICAgICAgICAgcGFzc3dvcmQ6bnVsbCwKICAgICAgICAgIGFkZHJlc3M6bnVsbCwKICAgICAgICAgIGZ1bGxuYW1lOm51bGwKICAgICAgICAgIAogICAgICAgIH0KCiAgICAgICAgfQogICAgICAgCgogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLi4ubWFwU3RhdGUoewogICAgICAgIGF1dGhvcml6ZWQ6IHN0YXRlID0+IHN0YXRlLmF1dGgudXNlcgogICAgICAKICAgICAgfSkKICAgICAgfSwKICAgIG1ldGhvZHM6IHsKICAgIAogICAgcG9zdENvZGVTZWFyY2g6IGZ1bmN0aW9uKCkgewogICAgCiAgICAgIGF4aW9zCiAgICAgIC5nZXQoImh0dHBzOi8vYXBpLnBvc3Rjb2Rlcy5pby9wb3N0Y29kZXMvIiArIHRoaXMuY29kZSkKICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIAogICAgICAgIHRoaXMucG9zdGNvZGVzWzBdID0gcmVzcG9uc2UuZGF0YS5yZXN1bHQ7CiAgICAgICAgdGhpcy5zYW1wbGUgPSB0aGlzLnBvc3Rjb2RlczsKICAgICAgICAKICAgICAgICB0aGlzLmNvdW50cnlEYXRhLnB1c2godGhpcy5wb3N0Y29kZXNbMF0uY291bnRyeSk7CiAgICAgICAgdGhpcy5yZWdpb25EYXRhLnB1c2godGhpcy5wb3N0Y29kZXNbMF0ucmVnaW9uKQogICAgICB9KS5jYXRjaChlcnJvcj0+ewogICAgICAgY29uc29sZS5sb2coZXJyb3IpCiB9KQogICAgICB9LAoKICAgICAgLi4ubWFwQWN0aW9ucyh7CiAgICAgICAgIHJlZ2lzdGVyOiAnYXV0aC9yZWdpc3RlcicKICAgICAgCiAgICB9KSwKICAgICAgIAogIHNob3dBbGVydCgpIHsKICAgIGNvbnN0IG9wdGlvbnMgPSB7dGl0bGU6ICdNaXNzaW5nIEZpZWxkcycsIHNpemU6ICdzbSd9CiAgICB0aGlzLiRkaWFsb2dzLmFsZXJ0KCdQbGVhc2UgZnVsZmlsbCBhbGwgZmllbGRzJywgb3B0aW9ucykKICAgIAoKICB9LAoKICAgc2hvd0FsZXJ0MigpIHsKICAgIGNvbnN0IG9wdGlvbnMgPSB7dGl0bGU6ICdNaXNzaW5nIEZpZWxkcycsIHNpemU6ICdzbSd9CiAgICB0aGlzLiRkaWFsb2dzLmFsZXJ0KCdVc2VybmFtZSBFeGlzdHMnLCBvcHRpb25zKQogICAgCgogIH0sCgogIHNob3dTdWNjZXNzQWxlcnQoKSB7CiAgICAgICBjb25zdCBvcHRpb25zID0ge3RpdGxlOiAnU3VjY2VzcycsIHNpemU6ICdzbSd9CiAgICB0aGlzLiRkaWFsb2dzLmFsZXJ0KCdZb3UgaGF2ZSBzdWNjZXNzZnVsbHkgc2lnbmVkIHVwJywgb3B0aW9ucykudGhlbigoKSA9PnsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucmVwbGFjZSh7CiAgICAgICAgICAgICAgICBuYW1lOiAnUHJvZHVjdExpc3QnCiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0pCiAgfSwKICBhc3luYyB1c2VyQ2hlY2sgKCkgewogICAgICAgaWYoISF0aGlzLmFkcmVzc19saW5lICYmISF0aGlzLmZpcnN0bmFtZSAmJiAhIXRoaXMuZm9ybS51c2VybmFtZSAmJiAhIXRoaXMuZm9ybS5wYXNzd29yZCYmISF0aGlzLmxhc3RuYW1lJiYhIXRoaXMuY29kZSAmJiEhdGhpcy5jb3VudHJ5ICYmISF0aGlzLnJlZ2lvbikgewogICAgICAgIGF3YWl0IGF4aW9zLmdldCgiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS9tZXNzYWdlcy9maW5kVXNlckJ5VXNlcm5hbWUvIiArIHRoaXMuZm9ybS51c2VybmFtZSkudGhlbigocmVzcG9uc2UpPT57CiAgICAgICAgaWYocmVzcG9uc2UuZGF0YSkgewogICAgICAgICAgICB0aGlzLnNob3dBbGVydDIoKTsKICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpCiAgICAgICAgICAgIAogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuc3VibWl0KCkKICAgICAgICB9CiAgICAgICB9KSB9ZWxzZSB7CiAgICAgICAgdGhpcy5zaG93QWxlcnQoKQogICAgICAgfQogICAgICAgCiAgICB9LAoKCiAgICAgICBhc3luYyBzdWJtaXQoKXsgCiAgICAgICAgICAKICAgICAgICAgICAgdGhpcy5mb3JtLmFkZHJlc3MgPSB0aGlzLmNvZGUgKyAiICIgKyB0aGlzLmNvdW50cnkgKyAiICIgKyB0aGlzLnJlZ2lvbiArICIgIiArIHRoaXMuYWRyZXNzX2xpbmUKICAgICAgICAgICAgdGhpcy5mb3JtLmZ1bGxuYW1lID0gdGhpcy5maXJzdG5hbWUgKyAiICIgKyB0aGlzLmxhc3RuYW1lCiAgICAgICAgICAgIAogICAgICAgICBhd2FpdCB0aGlzLnJlZ2lzdGVyKHRoaXMuZm9ybSkudGhlbigoKSA9PiB7CiAgICAgICAgICAgICB0aGlzLnNob3dTdWNjZXNzQWxlcnQoKQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKQogICAgICAgICAgICB9KSB9IAogICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICB9LAogICAgICAgICAKICAgIAp9Cgo="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;AAIA;;;AAGA","file":"Register.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    \n<div class=\"container register-form\">\n            <div class=\"form\">\n                <div class=\"note\">\n                    \n                    <p>Registration Form</p>\n                </div>\n                <form @submit.prevent=\"submit\">\n                <div class=\"form-content\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Your UserName *\" value=\"\" v-model=\"form.username\"/>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Your Password *\" value=\"\" v-model = \"form.password\"/>\n                            </div>\n                           \n                        </div>\n                        <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"First Name *\" value=\"\" v-model=\"firstname\"/>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Last Name *\" value=\"\" v-model = \"lastname\"/>\n                            </div>   \n                        </div>\n                    </div>\n                    <div class=\"row\"> </div>\n                    <div class=\"note\"> Adress Information </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                                <input autocomplete = \"off\" v-model=\"code\" type=\"text\" class=\"form-control\" placeholder=\"Post Code *\" @blur=\"postCodeSearch\"/>\n                            </div>\n                            <div class=\"form-group\" style=\"margin:10% 25\">\n                                <vue-bootstrap-typeahead placeholder=\"Country\" v-model=\"country\" :data='countryData'/>\n\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div  style=\"margin:10% 25\">\n                                <vue-bootstrap-typeahead :data='regionData' v-model=\"region\" placeholder=\"Region\"/>\n                            </div>\n                            <div class=\"form-group\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Adress Line 1\" value=\"\" v-model=\"adress_line\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\"> \n                        \n                    </div>\n\n                    <button type=\"button\" class=\"btn btn-primary\" @click=\"userCheck()\" style=\"margin-top:6px\">Submit</button>\n                </div>\n                </form>\n            </div>\n        </div>\n\n\n</template>\n\n<script>\nimport axios from 'axios'\nimport {mapActions} from 'vuex'\nimport {mapState} from 'vuex'\nimport VueBootstrapTypeahead from 'vue-bootstrap-typeahead'\nexport default {components: {\n        VueBootstrapTypeahead\n        \n    },\n\n    \n\n    data() {\n\n        return {\n\n        code: '',\n        postcode:'',\n        region:'',\n        country:'',\n        countries:[],\n        sample: [],\n        countryData:[],\n        regionData:[],\n        adress_line:'',\n        firstname:'',\n        lastname:'',\n\n        form:{\n          username:null,\n          password:null,\n          address:null,\n          fullname:null\n          \n        }\n\n        }\n       \n\n    },\n    computed: {\n        ...mapState({\n        authorized: state => state.auth.user\n      \n      })\n      },\n    methods: {\n    \n    postCodeSearch: function() {\n    \n      axios\n      .get(\"https://api.postcodes.io/postcodes/\" + this.code)\n      .then(response => {\n        \n        this.postcodes[0] = response.data.result;\n        this.sample = this.postcodes;\n        \n        this.countryData.push(this.postcodes[0].country);\n        this.regionData.push(this.postcodes[0].region)\n      }).catch(error=>{\n       console.log(error)\n })\n      },\n\n      ...mapActions({\n         register: 'auth/register'\n      \n    }),\n       \n  showAlert() {\n    const options = {title: 'Missing Fields', size: 'sm'}\n    this.$dialogs.alert('Please fulfill all fields', options)\n    \n\n  },\n\n   showAlert2() {\n    const options = {title: 'Missing Fields', size: 'sm'}\n    this.$dialogs.alert('Username Exists', options)\n    \n\n  },\n\n  showSuccessAlert() {\n       const options = {title: 'Success', size: 'sm'}\n    this.$dialogs.alert('You have successfully signed up', options).then(() =>{\n                    this.$router.replace({\n                name: 'ProductList'\n              })\n                })\n  },\n  async userCheck () {\n       if(!!this.adress_line &&!!this.firstname && !!this.form.username && !!this.form.password&&!!this.lastname&&!!this.code &&!!this.country &&!!this.region) {\n        await axios.get(\"http://localhost:8080/api/messages/findUserByUsername/\" + this.form.username).then((response)=>{\n        if(response.data) {\n            this.showAlert2();\n            console.log(response)\n            \n        } else {\n            this.submit()\n        }\n       }) }else {\n        this.showAlert()\n       }\n       \n    },\n\n\n       async submit(){ \n          \n            this.form.address = this.code + \" \" + this.country + \" \" + this.region + \" \" + this.adress_line\n            this.form.fullname = this.firstname + \" \" + this.lastname\n            \n         await this.register(this.form).then(() => {\n             this.showSuccessAlert()\n                \n            }).catch(error => {\n                console.log(error)\n            }) } \n            \n              \n            \n          },\n         \n    \n}\n\n</script>\n\n<style>\n\n</style>"]}]}